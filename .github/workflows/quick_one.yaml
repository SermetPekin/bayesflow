name: Run quick single python version tests on Windows

on:
  workflow_dispatch:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - main
      - dev

defaults:
  run:
    shell: bash


jobs:
  test:
    name: Run Quick Single Python Version Tests on Windows

    strategy:
      matrix:
        os: [windows-latest]
        python-version: ["3.10"]
        backend: ["tensorflow"]

    runs-on: ${{ matrix.os }}

    env:
      KERAS_BACKEND: ${{ matrix.backend }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ./.pip_cache
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml', '**/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-

      - name: Install Dependencies
        run: |
          python -m pip install -U pip setuptools wheel
          python -m pip install --cache-dir ./.pip_cache .[test]
      - name: Install JAX
        if: ${{ matrix.backend == 'jax' }}
        run: |
          python -m pip install --cache-dir ./.pip_cache -U jax
      - name: Install TensorFlow
        if: ${{ matrix.backend == 'tensorflow' }}
        run: |
          python -m pip install --cache-dir ./.pip_cache -U tensorflow
      - name: Install PyTorch
        if: ${{ matrix.backend == 'torch' }}
        run: |
          python -m pip install --cache-dir ./.pip_cache -U torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
    
      - name: Show Environment Info
        run: |
          python --version
          python -m pip --version
          printenv | sort
          python -m pip list
          python -m pip freeze > packages_.txt
      
      - name: Upload packages list artifact
        uses: actions/upload-artifact@v4
        with:
          name: packages-list-${{ matrix.os }}-${{ matrix.backend }}   
          path: packages_.txt
          retention-days: 10  

      - name: Run Tests
        run: |
          # pytest tests/test_approximators/test_approximator_standardization/test_approximator_standardization.py::test_save_and_load -v
          pytest -m "not slow"